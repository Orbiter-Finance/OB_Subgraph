// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class BlockIntervalUpdated extends ethereum.Event {
  get params(): BlockIntervalUpdated__Params {
    return new BlockIntervalUpdated__Params(this);
  }
}

export class BlockIntervalUpdated__Params {
  _event: BlockIntervalUpdated;

  constructor(event: BlockIntervalUpdated) {
    this._event = event;
  }

  get blockInterval(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class HistoryBlocksRootSaved extends ethereum.Event {
  get params(): HistoryBlocksRootSaved__Params {
    return new HistoryBlocksRootSaved__Params(this);
  }
}

export class HistoryBlocksRootSaved__Params {
  _event: HistoryBlocksRootSaved;

  constructor(event: HistoryBlocksRootSaved) {
    this._event = event;
  }

  get startBlockNumber(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get blocksRoot(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get blockInterval(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class InjectOwnerUpdated extends ethereum.Event {
  get params(): InjectOwnerUpdated__Params {
    return new InjectOwnerUpdated__Params(this);
  }
}

export class InjectOwnerUpdated__Params {
  _event: InjectOwnerUpdated;

  constructor(event: InjectOwnerUpdated) {
    this._event = event;
  }

  get injectOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class spvData extends ethereum.SmartContract {
  static bind(address: Address): spvData {
    return new spvData("spvData", address);
  }

  blockInterval(): BigInt {
    let result = super.call("blockInterval", "blockInterval():(uint64)", []);

    return result[0].toBigInt();
  }

  try_blockInterval(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("blockInterval", "blockInterval():(uint64)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getBlocksRoot(startBlockNumber: BigInt): Bytes {
    let result = super.call(
      "getBlocksRoot",
      "getBlocksRoot(uint256):(bytes32)",
      [ethereum.Value.fromUnsignedBigInt(startBlockNumber)]
    );

    return result[0].toBytes();
  }

  try_getBlocksRoot(startBlockNumber: BigInt): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getBlocksRoot",
      "getBlocksRoot(uint256):(bytes32)",
      [ethereum.Value.fromUnsignedBigInt(startBlockNumber)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  injectOwner(): Address {
    let result = super.call("injectOwner", "injectOwner():(address)", []);

    return result[0].toAddress();
  }

  try_injectOwner(): ethereum.CallResult<Address> {
    let result = super.tryCall("injectOwner", "injectOwner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get manager_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class InjectBlocksRootsCall extends ethereum.Call {
  get inputs(): InjectBlocksRootsCall__Inputs {
    return new InjectBlocksRootsCall__Inputs(this);
  }

  get outputs(): InjectBlocksRootsCall__Outputs {
    return new InjectBlocksRootsCall__Outputs(this);
  }
}

export class InjectBlocksRootsCall__Inputs {
  _call: InjectBlocksRootsCall;

  constructor(call: InjectBlocksRootsCall) {
    this._call = call;
  }

  get blockNumber0(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get blockNumber1(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get injectionBlocksRoots(): Array<
    InjectBlocksRootsCallInjectionBlocksRootsStruct
  > {
    return this._call.inputValues[2].value.toTupleArray<
      InjectBlocksRootsCallInjectionBlocksRootsStruct
    >();
  }
}

export class InjectBlocksRootsCall__Outputs {
  _call: InjectBlocksRootsCall;

  constructor(call: InjectBlocksRootsCall) {
    this._call = call;
  }
}

export class InjectBlocksRootsCallInjectionBlocksRootsStruct extends ethereum.Tuple {
  get startBlockNumber(): BigInt {
    return this[0].toBigInt();
  }

  get blocksRoot(): Bytes {
    return this[1].toBytes();
  }
}

export class SaveHistoryBlocksRootsCall extends ethereum.Call {
  get inputs(): SaveHistoryBlocksRootsCall__Inputs {
    return new SaveHistoryBlocksRootsCall__Inputs(this);
  }

  get outputs(): SaveHistoryBlocksRootsCall__Outputs {
    return new SaveHistoryBlocksRootsCall__Outputs(this);
  }
}

export class SaveHistoryBlocksRootsCall__Inputs {
  _call: SaveHistoryBlocksRootsCall;

  constructor(call: SaveHistoryBlocksRootsCall) {
    this._call = call;
  }
}

export class SaveHistoryBlocksRootsCall__Outputs {
  _call: SaveHistoryBlocksRootsCall;

  constructor(call: SaveHistoryBlocksRootsCall) {
    this._call = call;
  }
}

export class UpdateBlockIntervalCall extends ethereum.Call {
  get inputs(): UpdateBlockIntervalCall__Inputs {
    return new UpdateBlockIntervalCall__Inputs(this);
  }

  get outputs(): UpdateBlockIntervalCall__Outputs {
    return new UpdateBlockIntervalCall__Outputs(this);
  }
}

export class UpdateBlockIntervalCall__Inputs {
  _call: UpdateBlockIntervalCall;

  constructor(call: UpdateBlockIntervalCall) {
    this._call = call;
  }

  get blockInterval_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateBlockIntervalCall__Outputs {
  _call: UpdateBlockIntervalCall;

  constructor(call: UpdateBlockIntervalCall) {
    this._call = call;
  }
}

export class UpdateInjectOwnerCall extends ethereum.Call {
  get inputs(): UpdateInjectOwnerCall__Inputs {
    return new UpdateInjectOwnerCall__Inputs(this);
  }

  get outputs(): UpdateInjectOwnerCall__Outputs {
    return new UpdateInjectOwnerCall__Outputs(this);
  }
}

export class UpdateInjectOwnerCall__Inputs {
  _call: UpdateInjectOwnerCall;

  constructor(call: UpdateInjectOwnerCall) {
    this._call = call;
  }

  get injectOwner_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateInjectOwnerCall__Outputs {
  _call: UpdateInjectOwnerCall;

  constructor(call: UpdateInjectOwnerCall) {
    this._call = call;
  }
}
